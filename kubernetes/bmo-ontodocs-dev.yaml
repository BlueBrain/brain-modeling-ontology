# certificate
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    app: bmo-ontodocs
  name: bmo-ontodocs-certificate
  namespace: bbp-ou-dke
spec:
  secretName: bmo-ontodocs-cert-secret
  issuerRef:
    name: dke-bbp-acme-issuer
  dnsNames:
  - bmo-ontodocs.kcpdev.bbp.epfl.ch
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: bmo-ontodocs-storage
  namespace: bbp-ou-dke
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 25Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bmo-ontodocs
  namespace: bbp-ou-dke
spec:
  selector:
    matchLabels:
      app: bmo-ontodocs
  replicas: 1
  template:
    metadata:
      labels:
        app: bmo-ontodocs
    spec:
      volumes:
        - name: bmo-ontodocs-storage
          persistentVolumeClaim:
            claimName: bmo-ontodocs-storage
        - name: tls
          secret:
            secretName: bmo-ontodocs-cert-secret
      containers:
        - name: nginx
          image: nginx:1.21.3
          ports:
            - containerPort: 80
          volumeMounts:
            - name: bmo-ontodocs-storage
              mountPath: /usr/share/nginx/html
            - name: tls
              mountPath: /etc/tls
              readOnly: true
          env:
            - name: TLS_CERT
              value: /etc/tls/tls.crt
            - name: TLS_KEY
              value: /etc/tls/tls.key
---
apiVersion: v1
kind: Service
metadata:
  name: bmo-ontodocs-service
  namespace: bbp-ou-dke
  labels:
    app: bmo-ontodocs
spec:
  ports:
  - port: 80          # port where we want to expose the service in the endpoint
    targetPort: 80  # port where the service is exposed in the container
  selector:
    app: bmo-ontodocs
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bmo-ontodocs-ingress
  namespace: bbp-ou-dke
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - bmo-ontodocs.kcpdev.bbp.epfl.ch
      secretName:  bmo-ontodocs-cert-secret
  rules:
  - host: bmo-ontodocs.kcpdev.bbp.epfl.ch
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: bmo-ontodocs-service
            port:
              number: 80
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pod-creator-ci
  namespace: bbp-ou-dke
automountServiceAccountToken: false
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: bbp-ou-dke
  name: pod-creator-ci-role
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs:
      - "list"
      - "get"
      - "create"
  - apiGroups: [""]
    resources: ["pods/exec"]
    verbs:
      - "create"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: pod-creator-ci-role-binding
  namespace: bbp-ou-dke
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: pod-creator-ci-role
subjects:
  - kind: ServiceAccount
    name: pod-creator-ci